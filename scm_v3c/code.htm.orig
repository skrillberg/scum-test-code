<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\code.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\code.axf</H1><HR>
<<<<<<< HEAD
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060183: Last Updated: Mon Oct 07 17:22:22 2019
=======
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060183: Last Updated: Mon Oct 07 17:38:04 2019
>>>>>>> 537d3c6a4b09993e4c3c6ea4a78eb11c929583ef
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[9]">ADC_Handler</a> from cm0dsasm.o(.text) referenced from cm0dsasm.o(RESET)
 <LI><a href="#[b]">RFTIMER_Handler</a> from cm0dsasm.o(.text) referenced from cm0dsasm.o(RESET)
 <LI><a href="#[a]">RF_Handler</a> from cm0dsasm.o(.text) referenced from cm0dsasm.o(RESET)
 <LI><a href="#[15]">Reset_Handler</a> from cm0dsasm.o(.text) referenced from cm0dsasm.o(RESET)
 <LI><a href="#[6]">UART_Handler</a> from cm0dsasm.o(.text) referenced from cm0dsasm.o(RESET)
 <LI><a href="#[16]">__main</a> from __main.o(!!!main) referenced from cm0dsasm.o(.text)
 <LI><a href="#[14]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[13]">fputc</a> from retarget.o(.text) referenced from _printf_char_file.o(.text)
 <LI><a href="#[11]">interrupt_gpio10_activelow</a> from cm0dsasm.o(.text) referenced from cm0dsasm.o(RESET)
 <LI><a href="#[7]">interrupt_gpio3_activehigh_debounced</a> from cm0dsasm.o(.text) referenced from cm0dsasm.o(RESET)
 <LI><a href="#[f]">interrupt_gpio8_activehigh</a> from cm0dsasm.o(.text) referenced from cm0dsasm.o(RESET)
 <LI><a href="#[10]">interrupt_gpio9_activelow</a> from cm0dsasm.o(.text) referenced from cm0dsasm.o(RESET)
 <LI><a href="#[d]">interrupt_rawchips_32</a> from cm0dsasm.o(.text) referenced from cm0dsasm.o(RESET)
 <LI><a href="#[c]">interrupt_rawchips_startval</a> from cm0dsasm.o(.text) referenced from cm0dsasm.o(RESET)
 <LI><a href="#[8]">optical_irq_in</a> from cm0dsasm.o(.text) referenced from cm0dsasm.o(RESET)
 <LI><a href="#[e]">optical_sfd_interrupt</a> from cm0dsasm.o(.text) referenced from cm0dsasm.o(RESET)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[16]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[18]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[1a]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[86]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[1b]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[1c]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[1e]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
</UL>

<P><STRONG><a name="[1f]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent_end
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[21]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[26]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[2b]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[19]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[23]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[25]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[27]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[99]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[2a]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[2c]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[5b]"></a>__aeabi_memcpy4</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_TX_channel_table
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPI_enables
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPO_enables
</UL>

<P><STRONG><a name="[15]"></a>Reset_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cm0dsasm.o(.text))

<P><STRONG><a name="[6]"></a>UART_Handler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cm0dsasm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cm0dsasm.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>ADC_Handler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cm0dsasm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cm0dsasm.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RF_Handler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cm0dsasm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cm0dsasm.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>RFTIMER_Handler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cm0dsasm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RFTIMER_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cm0dsasm.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>interrupt_gpio3_activehigh_debounced</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cm0dsasm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INTERRUPT_GPIO3_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cm0dsasm.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>interrupt_gpio8_activehigh</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cm0dsasm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INTERRUPT_GPIO8_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cm0dsasm.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>interrupt_gpio9_activelow</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cm0dsasm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INTERRUPT_GPIO9_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cm0dsasm.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>interrupt_gpio10_activelow</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cm0dsasm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INTERRUPT_GPIO10_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cm0dsasm.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>interrupt_rawchips_startval</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cm0dsasm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RAWCHIPS_STARTVAL_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cm0dsasm.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>interrupt_rawchips_32</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cm0dsasm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RAWCHIPS_32_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cm0dsasm.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>optical_irq_in</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cm0dsasm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPTICAL_32_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cm0dsasm.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>optical_sfd_interrupt</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cm0dsasm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPTICAL_SFD_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cm0dsasm.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cm0dsasm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2e]"></a>UART_ISR</STRONG> (Thumb, 904 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rftimer_disable_interrupts
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_disable_interrupts
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analog_scan_chain_write
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analog_scan_chain_load
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Handler
</UL>

<P><STRONG><a name="[2f]"></a>ADC_ISR</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Handler
</UL>

<P><STRONG><a name="[30]"></a>RF_ISR</STRONG> (Thumb, 852 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rftimer_enable_interrupts
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_IF_estimate
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_rxNow
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_rxEnable
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_rfOff
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_loadPacket
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_frequency_housekeeping
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Handler
</UL>

<P><STRONG><a name="[31]"></a>RFTIMER_ISR</STRONG> (Thumb, 372 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setFrequencyRX
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_txNow
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_txEnable
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_rxNow
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_rxEnable
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_rfOff
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RFTIMER_Handler
</UL>

<P><STRONG><a name="[37]"></a>RAWCHIPS_32_ISR</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_rawchips_32
</UL>

<P><STRONG><a name="[36]"></a>RAWCHIPS_STARTVAL_ISR</STRONG> (Thumb, 552 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_rawchips_startval
</UL>

<P><STRONG><a name="[38]"></a>OPTICAL_32_ISR</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optical_irq_in
</UL>

<P><STRONG><a name="[39]"></a>OPTICAL_SFD_ISR</STRONG> (Thumb, 472 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sys_clk_secondary_freq
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_clock_frequency
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_2M_RC_frequency
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analog_scan_chain_write
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analog_scan_chain_load
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LC_monotonic
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optical_sfd_interrupt
</UL>

<P><STRONG><a name="[32]"></a>INTERRUPT_GPIO3_ISR</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_gpio3_activehigh_debounced
</UL>

<P><STRONG><a name="[33]"></a>INTERRUPT_GPIO8_ISR</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_gpio8_activehigh
</UL>

<P><STRONG><a name="[34]"></a>INTERRUPT_GPIO9_ISR</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_gpio9_activelow
</UL>

<P><STRONG><a name="[35]"></a>INTERRUPT_GPIO10_ISR</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_gpio10_activelow
</UL>

<P><STRONG><a name="[28]"></a>main</STRONG> (Thumb, 258 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_rfOff
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_mote
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32c
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;classify_pulse
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[52]"></a>uart_out</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, retarget.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_in
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[13]"></a>fputc</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, retarget.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_out
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[53]"></a>uart_in</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_out
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
</UL>

<P><STRONG><a name="[54]"></a>fgetc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_in
</UL>

<P><STRONG><a name="[96]"></a>ferror</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, retarget.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[55]"></a>_ttywrch</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[2d]"></a>_sys_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, retarget.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[56]"></a>reverse</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32c
</UL>

<P><STRONG><a name="[4f]"></a>crc32c</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>flipChar</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LC_FREQCHANGE
</UL>

<P><STRONG><a name="[57]"></a>GPO_control</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_asc_bit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_mote
</UL>

<P><STRONG><a name="[59]"></a>GPI_control</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_asc_bit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_mote
</UL>

<P><STRONG><a name="[5a]"></a>GPO_enables</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_asc_bit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_mote
</UL>

<P><STRONG><a name="[5c]"></a>GPI_enables</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_asc_bit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_mote
</UL>

<P><STRONG><a name="[5d]"></a>init_ldo_control</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_asc_bit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_mote
</UL>

<P><STRONG><a name="[5e]"></a>sram_test</STRONG> (Thumb, 558 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[5f]"></a>set_IF_LDO_voltage</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_asc_bit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_rx_ZCC
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_rx_MF
</UL>

<P><STRONG><a name="[60]"></a>set_VDDD_LDO_voltage</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_asc_bit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
</UL>

<P><STRONG><a name="[61]"></a>set_AUX_LDO_voltage</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_asc_bit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
</UL>

<P><STRONG><a name="[62]"></a>set_ALWAYSON_LDO_voltage</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_asc_bit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_mote
</UL>

<P><STRONG><a name="[63]"></a>set_zcc_demod_threshold</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_asc_bit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_rx_ZCC
</UL>

<P><STRONG><a name="[64]"></a>set_IF_ZCC_clkdiv</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_asc_bit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_rx_ZCC
</UL>

<P><STRONG><a name="[65]"></a>set_IF_ZCC_early</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_asc_bit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_rx_ZCC
</UL>

<P><STRONG><a name="[66]"></a>set_IF_stg3gm_ASC</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_asc_bit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_rx_MF
</UL>

<P><STRONG><a name="[67]"></a>set_IF_comparator_trim_I</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_asc_bit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_rx_ZCC
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_rx_MF
</UL>

<P><STRONG><a name="[68]"></a>set_IF_comparator_trim_Q</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_asc_bit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_rx_MF
</UL>

<P><STRONG><a name="[69]"></a>set_IF_gain_ASC</STRONG> (Thumb, 314 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_asc_bit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_rx_MF
</UL>

<P><STRONG><a name="[6a]"></a>radio_init_rx_MF</STRONG> (Thumb, 282 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_asc_bit
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_gain_ASC
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_comparator_trim_Q
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_comparator_trim_I
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_stg3gm_ASC
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_LDO_voltage
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_mote
</UL>

<P><STRONG><a name="[6b]"></a>radio_init_rx_ZCC</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_asc_bit
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_comparator_trim_I
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_ZCC_early
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_ZCC_clkdiv
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_zcc_demod_threshold
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_LDO_voltage
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
</UL>

<P><STRONG><a name="[6f]"></a>set_LO_supply</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_tx
</UL>

<P><STRONG><a name="[6e]"></a>set_PA_supply</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_tx
</UL>

<P><STRONG><a name="[6d]"></a>set_LC_current</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_tx
</UL>

<P><STRONG><a name="[6c]"></a>radio_init_tx</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_asc_bit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_LC_current
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_PA_supply
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_LO_supply
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_mote
</UL>

<P><STRONG><a name="[73]"></a>divProgram</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_divider
</UL>

<P><STRONG><a name="[72]"></a>prescaler</STRONG> (Thumb, 574 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_divider
</UL>

<P><STRONG><a name="[71]"></a>set_DIV_supply</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_divider
</UL>

<P><STRONG><a name="[70]"></a>radio_init_divider</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_DIV_supply
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prescaler
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;divProgram
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_mote
</UL>

<P><STRONG><a name="[44]"></a>read_IF_estimate</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ISR
</UL>

<P><STRONG><a name="[4c]"></a>set_IF_clock_frequency</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_asc_bit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_frequency_housekeeping
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_mote
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPTICAL_SFD_ISR
</UL>

<P><STRONG><a name="[49]"></a>set_sys_clk_secondary_freq</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_asc_bit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_mote
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPTICAL_SFD_ISR
</UL>

<P><STRONG><a name="[74]"></a>LC_FREQCHANGE</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flipChar
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LC_monotonic
</UL>

<P><STRONG><a name="[4a]"></a>LC_monotonic</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LC_FREQCHANGE
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setFrequencyTX
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_TX_channel_table
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_RX_channel_table
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setFrequencyRX
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_mote
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPTICAL_SFD_ISR
</UL>

<P><STRONG><a name="[4e]"></a>initialize_mote</STRONG> (Thumb, 342 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_asc_bit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_divider
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_tx
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_rx_MF
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ALWAYSON_LDO_voltage
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ldo_control
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPI_enables
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPO_enables
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPI_control
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPO_control
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sys_clk_secondary_freq
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_clock_frequency
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_2M_RC_frequency
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rftimer_disable_interrupts
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_disable_interrupts
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analog_scan_chain_write
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analog_scan_chain_load
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LC_monotonic
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[77]"></a>build_RX_channel_table</STRONG> (Thumb, 210 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LC_monotonic
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_channel_table
</UL>

<P><STRONG><a name="[7a]"></a>build_TX_channel_table</STRONG> (Thumb, 212 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LC_monotonic
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_channel_table
</UL>

<P><STRONG><a name="[7b]"></a>build_channel_table</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_asc_bit
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_TX_channel_table
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_RX_channel_table
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_rfOff
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_asc_bit
</UL>

<P><STRONG><a name="[7c]"></a>estimate_temperature_2M_32k</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, scm3c_hardware_interface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[7d]"></a>flip_lsb8</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, scm3_hardware_interface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_2M_RC_frequency
</UL>

<P><STRONG><a name="[3b]"></a>analog_scan_chain_write</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, scm3_hardware_interface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_mote
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPTICAL_SFD_ISR
</UL>

<P><STRONG><a name="[3c]"></a>analog_scan_chain_load</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scm3_hardware_interface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_mote
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPTICAL_SFD_ISR
</UL>

<P><STRONG><a name="[4b]"></a>set_2M_RC_frequency</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, scm3_hardware_interface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flip_lsb8
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_2M_DAC
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_mote
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPTICAL_SFD_ISR
</UL>

<P><STRONG><a name="[7e]"></a>initialize_2M_DAC</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, scm3_hardware_interface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_2M_RC_frequency
</UL>

<P><STRONG><a name="[58]"></a>set_asc_bit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, scm3_hardware_interface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_channel_table
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_tx
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_rx_ZCC
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_rx_MF
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_gain_ASC
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_comparator_trim_Q
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_comparator_trim_I
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_stg3gm_ASC
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_ZCC_early
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_ZCC_clkdiv
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_zcc_demod_threshold
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ALWAYSON_LDO_voltage
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_AUX_LDO_voltage
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_VDDD_LDO_voltage
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_LDO_voltage
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ldo_control
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPI_enables
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPO_enables
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPI_control
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPO_control
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sys_clk_secondary_freq
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_clock_frequency
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_mote
</UL>

<P><STRONG><a name="[4d]"></a>clear_asc_bit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, scm3_hardware_interface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_channel_table
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_tx
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_rx_ZCC
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init_rx_MF
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_gain_ASC
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_comparator_trim_Q
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_comparator_trim_I
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_stg3gm_ASC
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_ZCC_early
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_ZCC_clkdiv
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_zcc_demod_threshold
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ALWAYSON_LDO_voltage
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_AUX_LDO_voltage
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_VDDD_LDO_voltage
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_LDO_voltage
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ldo_control
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPI_enables
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPO_enables
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPI_control
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPO_control
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sys_clk_secondary_freq
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_clock_frequency
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_mote
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPTICAL_SFD_ISR
</UL>

<P><STRONG><a name="[46]"></a>setFrequencyRX</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, scum_radio_bsp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LC_monotonic
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RFTIMER_ISR
</UL>

<P><STRONG><a name="[7f]"></a>setFrequencyTX</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, scum_radio_bsp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LC_monotonic
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_elevation
</UL>

<P><STRONG><a name="[45]"></a>radio_loadPacket</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, scum_radio_bsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_elevation
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ISR
</UL>

<P><STRONG><a name="[47]"></a>radio_txEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, scum_radio_bsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_elevation
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RFTIMER_ISR
</UL>

<P><STRONG><a name="[48]"></a>radio_txNow</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, scum_radio_bsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_elevation
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RFTIMER_ISR
</UL>

<P><STRONG><a name="[41]"></a>radio_rxEnable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, scum_radio_bsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ISR
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RFTIMER_ISR
</UL>

<P><STRONG><a name="[42]"></a>radio_rxNow</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, scum_radio_bsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ISR
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RFTIMER_ISR
</UL>

<P><STRONG><a name="[3f]"></a>radio_rfOff</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, scum_radio_bsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_channel_table
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ISR
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RFTIMER_ISR
</UL>

<P><STRONG><a name="[40]"></a>radio_frequency_housekeeping</STRONG> (Thumb, 432 bytes, Stack size 0 bytes, scum_radio_bsp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_IF_clock_frequency
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ISR
</UL>

<P><STRONG><a name="[3d]"></a>radio_disable_interrupts</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, scum_radio_bsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_mote
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
</UL>

<P><STRONG><a name="[43]"></a>rftimer_enable_interrupts</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, scum_radio_bsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ISR
</UL>

<P><STRONG><a name="[3e]"></a>rftimer_disable_interrupts</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, scum_radio_bsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_mote
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
</UL>

<P><STRONG><a name="[50]"></a>classify_pulse</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, lighthouse.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>update_state_elevation</STRONG> (Thumb, 364 bytes, Stack size 0 bytes, lighthouse.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setFrequencyTX
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_txNow
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_txEnable
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_loadPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state
</UL>

<P><STRONG><a name="[82]"></a>update_state_azimuth</STRONG> (Thumb, 500 bytes, Stack size 0 bytes, lighthouse.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state
</UL>

<P><STRONG><a name="[51]"></a>update_state</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lighthouse.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_azimuth
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_elevation
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[83]"></a>sync_pulse_width_compensate</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, lighthouse.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[3a]"></a>__2printf</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, noretval__2printf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_pulse_width_compensate
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_azimuth
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_elevation
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sram_test
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ISR
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RFTIMER_ISR
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RAWCHIPS_32_ISR
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPTICAL_SFD_ISR
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INTERRUPT_GPIO9_ISR
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INTERRUPT_GPIO8_ISR
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INTERRUPT_GPIO3_ISR
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INTERRUPT_GPIO10_ISR
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ISR
</UL>

<P><STRONG><a name="[85]"></a>__printf</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, __printf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[87]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, _printf_str.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding (Weak Reference)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[1d]"></a>_printf_int_dec</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, _printf_dec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned (Weak Reference)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[20]"></a>_printf_int_hex</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, _printf_hex_int.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[8f]"></a>_memset_w</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[8e]"></a>_memset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[90]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[78]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_TX_channel_table
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_RX_channel_table
</UL>

<P><STRONG><a name="[91]"></a>__rt_memclr_w</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[79]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_pulse_width_compensate
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_temperature_2M_32k
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_TX_channel_table
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_RX_channel_table
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_frequency_housekeeping
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LC_monotonic
</UL>

<P><STRONG><a name="[8d]"></a>_printf_int_common</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, _printf_intcommon.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding (Weak Reference)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[92]"></a>_printf_cs_common</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_mbtowc (Weak Reference)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[22]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[94]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[84]"></a>_printf_char_file</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _printf_char_file.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[8c]"></a>__rt_udiv10</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, rtudiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[95]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[24]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[29]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[97]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[81]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lighthouse.o(i.__ARM_common_switch8))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_azimuth
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_elevation
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[14]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[98]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[93]"></a>_printf_mbtowc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[89]"></a>_printf_post_padding</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[88]"></a>_printf_pre_padding</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[8a]"></a>_printf_truncate_signed</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[8b]"></a>_printf_truncate_unsigned</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>
<HR></body></html>
